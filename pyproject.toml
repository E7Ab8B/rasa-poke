[tool.black]
line-length = 120
target-version = ["py310"]
skip-string-normalization = true


[tool.pyright]
venvPath = "."
venv = ".venv"
pythonVersion = "3.10"
exclude = [".venv", "**/migrations"]
include = ["app"]


[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
skip = [".venv/", ".git/", ".rasa", "**/migrations"]
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true


[tool.pylint]

[tool.pylint.main]
# List of plugins (as comma separated values of python module names) to load, usually to register additional checkers.
load-plugins = ["pylint_django"]
ignore = ["**/migrations", "manage.py"]

py-version = "3.10"

[tool.pylint.basic]
bad-names = ["foo", "bar", "baz"]

# Minimum line length for functions/classes that require docstrings, shorter ones
# are exempt.
docstring-min-length = 5

# Good variable names which should always be accepted, separated by a comma.
good-names = ["i", "j", "k", "ex", "Run", "_", "qs"]

[tool.pylint."django foreign keys referenced by strings"]
# A module containing Django settings to be used while linting.
django-settings-module = "config.settings"

[tool.pylint.format]
max-line-length = 120

[tool.pylint.design]
# Maximum number of parents for a class.
max-parents = 13
ignored-argument-names = "arg|args|kwargs"

[tool.pylint."messages control"]
# Disable the message, report, category or checker with the given id(s).
disable = [
    "missing-docstring",
    "invalid-name",
    "too-few-public-methods",
    "unused-wildcard-import",
    "fixme",
]

[tool.pylint.method_args]
# List of qualified names (i.e., library.method) which require a timeout
# parameter e.g. 'requests.api.get,requests.api.post'
timeout-methods = [
    "requests.api.delete",
    "requests.api.get",
    "requests.api.head",
    "requests.api.options",
    "requests.api.patch",
    "requests.api.post",
    "requests.api.put",
    "requests.api.request",
]

[tool.pylint.miscellaneous]
# List of note tags to take in consideration, separated by a comma.
notes = ["FIXME", "XXX", "TODO", "BUG", "NOTE"]

[tool.pylint.typecheck]
# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed. Python regular
# expressions are accepted.
generated-members = "REQUEST, acl_users, aq_parent, \"[a-zA-Z]+_set{1,2}\", save, delete"
